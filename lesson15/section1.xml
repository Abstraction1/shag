<?xml version="1.0" encoding="windows-1251" ?>
<?xml:stylesheet type="text/xsl" href="common/layout.xsl" ?>

<lesson title="Урок №15." next="section2.xml" prev="index.xml" summ="1">

<h2>Многомерные динамические массивы. </h2>
<p>И, снова в бой! Мы с Вами уже сталкивались с динамическими массивами, однако нам бы хотелось коснуться этой темы еще раз и рассказать вам кое-что о создании многомерных динамических массивов. </p>
<p>Многомерный массив в C по своей сути одномерен. Операции new и delete позволяют создавать и удалять динамические массивы, поддерживая при этом иллюзию произвольной размерности. Деятельность по организации динамического массива требует дополнительного внимания, которое окупается важным преимуществом: характеристики массива (операнды операции new) могут не быть константными выражениями. Это позволяет создавать многомерные динамические массивы произвольной конфигурации. Следующий пример иллюстрирует работу с динамическими массивами.</p>
<example>
#include &lt;iostream&gt;
using namespace std;
 
 void main()
 {
 	int i, j;

	 // Переменные для описания характеристик массивов.
	 int m1 = 5, m2 = 5;

	 /*
	 Организация двумерного динамического массива производится в два этапа.
	 Сначала создаётся одномерный массив указателей, а затем каждому элементу
 	 этого массива присваивается адрес одномерного массива. Для характеристик
	 размеров массивов не требуется константных выражений.
	 */
	 int **pArr = new int*[m1];
	 for (i = 0; i &lt; m1; i++) 
		pArr[i] = new int[m2];

	 pArr[3][3] = 100;
	 cout &lt;&lt; pArr[3][3] &lt;&lt; "\n";

	 
 	
 	//Последовательное уничтожение двумерного массива…
	
	 for (i = 0; i &lt; m1; i++) 
		delete[]pArr[i];
	 delete[]pArr;
}
</example>
</lesson>
