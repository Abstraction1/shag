<?xml version="1.0" encoding="windows-1251" ?>
<?xml:stylesheet type="text/xsl" href="common/layout.xsl" ?>

<lesson title="Урок №13:Ссылки" next="section4.xml" prev="section2.xml" summ="0">
<h2>Ссылки в качестве результатов функций</h2>
<p>Здесь мы рассмотрим использование ссылок в качестве результатов функций.
</p>

<p>Далее представлен ряд редакторов, рекомендуемых для использования и их основные возможности.
</p>


<p>Функции могут возвращать ссылки на объекты при условии, что эти объекты <b>существуют, когда функция неактивна</b>. Таким образом, функции не могут возвращать ссылки на локальные автоматические переменные. Например, для функции, объявленной как:
<example>double &amp;rf(int p);</example>необходим аргумент целого типа, и она возвращает ссылку на объект <b>double</b>, предположительно объявленный где-то в другом месте. 
</p>

<p>Проиллюстрируем сказанное конкретными примерами.</p>
<hr/>

<p>Пример 1. Заполнение двумерного массива одинаковыми числами.
<example>
#include &lt;iostream&gt; 
using namespace std;
int a[10][2];
void main ()
{
	int &amp; rf(int index); //Прототип функции.
	int b;
	cout &lt;&lt; "Заполнение двумерного массива. ";
	cout &lt;&lt; "Первый столбец заполняется обычным способом, ";
	cout &lt;&lt; "а второй - через функцию.\n";
	for (int i=0;i&lt;10;i++)
	{
	  cout &lt;&lt; i+1 &lt;&lt; "-й элемент: ";
	  cin &gt;&gt; b;
	  a[i][0] = b;
	  rf(i) = b;
	}
	cout &lt;&lt; "Вывод двумерного массива.\n";
	cout &lt;&lt; "1-й столбец   2-й столбец" &lt;&lt; "\n";
	for (i=0;i&lt;10;i++)
		cout &lt;&lt; a[i][0] &lt;&lt; "\t\t" &lt;&lt; rf(i) &lt;&lt; "\n";
}

int &amp;rf(int index)
{
  return a[index][1]; //Возврат ссылки на элемент массива.
}


</example> 
</p>
<p>Здесь объявляется глобальный двумерный массив a, состоящий из целых чисел. В начале функции <b>main()</b> содержится прототип ссылочной функции <b>rf()</b>, которая возвращает ссылку на целое значение второго столбца массива a, которое однозначно идентифицируется параметром-индексом <b>index</b>. Так как функция <b>rf()</b> возвращает ссылку на целое значение, то имя функции может оказаться <b><i>слева</i></b> от оператора присваивания, что продемонстрировано в строке:
<example>
rf(i) = b;
</example></p>
<hr/>

<p>Пример 2. Нахождение максимального элемента в массиве и замена его на нуль.
<example>
#include &lt;iostream&gt; 
using namespace std;
//Функция определяет ссылку на элемент
//массива с максимальным значением.
int &amp;rmax(int n, int d[])
{
  int im=0;
  for (int i=1; i&lt;n; i++)
	 im = d[im]>d[i]?im:i;
  return d[im];
}

void main ()
{
	int x[]={10, 20, 30, 14};
	int n=4;
	cout &lt;&lt; "\nrmax(n,x) = " &lt;&lt; rmax(n,x) &lt;&lt; "\n";
	rmax(n,x) = 0;
	for (int i=0;i&lt;n;i++)
	  cout &lt;&lt; "x[" &lt;&lt; i &lt;&lt; "]=" &lt;&lt; x[i] &lt;&lt; "  ";
	cout &lt;&lt; "\n";
}
</example>
</p>
<p> Результаты работы программы:
<example>
rmax (n,x) = 30
x[0]=10  x[1]=20  x[2]=0  x[3]=14

</example>
</p>


<p>При выполнении строки:
<example>cout &lt;&lt; "\nrmax(n,x) = " &lt;&lt; rmax(n,x) &lt;&lt; "\n";
</example>происходит первое обращение к функции <b>rmax()</b>, первый аргумент которой - количество элементов в массиве, а второй - сам массив. В результате возвращается ссылка на максимальный элемент массива, используя которую, это максимальное значение выводится на экран. При выполнении строки:
<example>rmax(n,x) = 0;
</example>снова осуществляется обращение к функции <b>rmax()</b>. Теперь уже по найденной ссылке максимальное значение заменяется на 0.
</p>



</lesson>