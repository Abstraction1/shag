<?xml version="1.0" encoding="windows-1251" ?>
<?xml:stylesheet type="text/xsl" href="common/layout.xsl" ?>

<lesson title="Урок №13" next="section3.xml" prev="section1.xml" summ="0">	  

<h2>Ссылочные параметры. Передача аргументов по ссылке.</h2>
<p>Ссылочные переменные используются достаточно редко: значительно удобнее использовать саму переменную, чем ссылку на нее. В качестве параметров функции ссылки имеют более широкое применение. Ссылки особенно полезны в функциях, возвращающих несколько объектов (значений). Для иллюстрации высказанного положения рассмотрим программу:
<example>
#include &lt;iostream&gt; 
using namespace std;
//Обмен с использованием указателей.
void interchange_ptr (int *u,int *v)
{
      int temp=*u;
      *u = *v; *v = temp;
}
/* ------------- */
//Обмен с использованием ссылок.
void interchange_ref (int &amp;u,int &amp;v)
{
      int temp=u;
      u = v; v = temp;
}
/* ------------- */
void main ()
{
      int x=5,y=10;
      /* --------------------------------------- */
      cout &lt;&lt; "Обмен с использованием указателей:\n";
      cout &lt;&lt; "Вначале  x = " &lt;&lt; x &lt;&lt; " и  y = " &lt;&lt;y &lt;&lt;"\n";
      interchange_ptr (&amp;x,&amp;y);
      cout &lt;&lt; "Теперь  x = " &lt;&lt; x &lt;&lt; " и  y = " &lt;&lt; y &lt;&lt;"\n";
      cout &lt;&lt; "-----------------------------------------" &lt;&lt;"\n";
      cout &lt;&lt; "Обмен с использованием ссылок:\n";
      cout &lt;&lt; "Вначале  x = " &lt;&lt; x &lt;&lt; " и  y = " &lt;&lt; y &lt;&lt;"\n";
      interchange_ref (x,y);
      cout &lt;&lt; "Теперь  x = " &lt;&lt; x &lt;&lt; " и  y = " &lt;&lt; y &lt;&lt;"\n";
}

</example>
</p>
<p>
В функции <b>interchange_ptr()</b> параметры описаны как указатели. Поэтому в теле этой функции выполняется их разименование, а при обращении к этой функции в качестве фактических переменных используются адреса <b>(&amp;x,&amp;y)</b> тех переменных, значения которых нужно поменять местами. В функции <b>interchange_ref()</b> параметрами являются ссылки. Ссылки обеспечивают доступ из тела функции к фактическим параметрам, в качестве которых используются обычные переменные, определенные в программе. 
</p>

<p>
Ссылки и указатели в качестве параметров функций тесно связаны. Рассмотрим следующую небольшую функцию:
<example>
void f(int *ip)
     {
        *ip = 12;
     }

</example>
</p>

<p>Внутри этой функции осуществляется доступ к переданному аргументу, адрес которого хранится в указателе <b>ip</b>, с помощью следующего оператора:
<example>
f(&amp;ivar); //Передача адреса ivar.

</example> 
</p>

<p>Внутри функции выражение <b>*ip = 12;</b> присваивает 12 переменной <b>ivar</b>, адрес которой был передан в функцию <b>f()</b>. Теперь рассмотрим аналогичную функцию, использующую ссылочные параметры:
<example>
void f(int &amp;ir)
     {
        ir = 12;
     }

</example>
</p>


<p>Указатель <b>ip</b> заменен ссылкой <b>ir</b>, которой присваивается значение 12. Выражение:
<example>
f(ivar); //Передача ivar по ссылке.

</example>присваивает значение ссылочному объекту: передает <b>ivar</b> по ссылке функции <b>f()</b>. Поскольку <b>ir</b> ссылается на <b>ivar</b>, то <b>ivar</b> присваивается значение 12.
</p>
												
</lesson>
