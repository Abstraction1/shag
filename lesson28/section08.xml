<?xml version="1.0" encoding="windows-1251" ?>
<?xml:stylesheet type="text/xsl" href="common/layout.xsl" ?>

<lesson title="Урок №28" next="hometask.xml" prev="section06.xml" summ="0">
<h2>Пример программы. Игра "Виселица".</h2>
<p>Смысл игры состоит в том, что пользователь за некоторое количество попыток должен отгадать слово, в нашем случае английское. В папку с проектом, в котором вы будете компилировать данный код, необходимо положить файл words.txt. Этот файл должен содержать несколько английских слов, расположенных в столбик (одно под другим).</p>
<example>
#include &lt;windows.h&gt;
#include &lt;iostream&gt;
#include &lt;stdio.h&gt;
#include &lt;io.h&gt;
#include &lt;stdlib.h&gt;
#include &lt;time.h&lt;
#include &lt;sys\locking.h&gt;
#include &lt;string.h&gt;
#include &lt;ctype.h&gt;

using namespace std;

// Максимальная длина слова
#define MAX_WORD_LENGTH 21

// Кол-во попыток
int Tries = 10;

// Кол-во угаданных слов
int CountWords = 0;

// Загрузка слова
bool LoadWord(FILE * file, char * word)
{
   int i = 0;
   char s[MAX_WORD_LENGTH] = {0};
   // Кол-во слов в файле
   static int count = -1;

   if(count == -1)
   {
      // Подсчет количества слов
      while(!feof(file))
      {
         fgets(s, MAX_WORD_LENGTH, file);
         count++;
      }
      // Слов нет?
      if(count == 0)
         return false;
      // Возврат файлового указателя в начало файла
      fseek(file, 0, 0);
   }

   // Случайное слово
   int n = rand() % count;
   // Поиск слова
   while(i &lt;= n)
   {
      fgets(s, MAX_WORD_LENGTH, file);
      i++;
   }
   // Определяем длину слова
   int wordlen = strlen(s);
   // Минимальная длина слова 2 буквы
   if(wordlen &lt;= 1)
      return false;

   // Убираем Enter (в DOS'е 2 байта 13 10)
   if(s[wordlen - 1] == 10)
      s[wordlen - 2] = 0;
   else if(s[wordlen - 1] == 13)
      s[wordlen - 1] = 0;
   // Копируем слово
   strcpy(word, s);
   // Получаем дескриптор файла
   int hFile = _fileno(file);
   // Вычисляем размер файла
   int size = _filelength(hFile);

   // Блокировка файла
   fseek(file, 0, 0);
   _locking(hFile, _LK_NBLCK, size);

   return true;
}

// Игра
void Game(char * word)
{
   // Перевод в большие буквы
   strupr(word);

   int len = strlen(word);
   // Строка-копия
   char * copy = new char[len + 1];	
   memset(copy, '*', len);
   copy[len] = 0;

   // Алфавит + пробелы
   char letters[52];

   int i, j = 0;
   for(i = 0; i &lt; 26; i++)
   {
      letters[j++] = i + 'A';
      letters[j++] = ' ';
   }
   // Замыкающий ноль
   letters[51] = 0;

   // Буква
   char letter;

   char * pos;
   bool replace = false;

   do {
      // Очистка экрана
      system("cls");
      cout &lt;&lt; copy &lt;&lt; endl &lt;&lt; endl;
      cout &lt;&lt; letters &lt;&lt; endl &lt;&lt; endl;
      cout &lt;&lt; "Count of tries: " &lt;&lt; Tries &lt;&lt; endl &lt;&lt; endl;
      cout &lt;&lt; "Input any letter:\t";
		
      cin &gt;&gt; letter;
      // Звуковой сигнал
      Beep(500, 200);

      // if(letter &gt;= 'A' &amp;&amp; letter &lt;= 'Z'
      // || letter &gt;= 'a' &amp;&amp; letter &lt;= 'z')
		
      // Буква?
      if(!isalpha(letter))
      {
         cout &lt;&lt; "It's not a letter" &lt;&lt; endl;
         // Задержка на 1 секунду
         Sleep(1000);
         continue;
      }

      // Перевод буквы в большую
      letter = toupper(letter);

      // Поиск буквы в алфавите
      pos = strchr(letters, letter);

      // Такая буква уже была
      if(pos == 0)
      {
         cout &lt;&lt; "This letter have been already pressed" &lt;&lt; endl;
         Sleep(1000);
         continue;
      }
      else
      {
         // Убираем букву из алфавита
         pos[0] = ' ';
      }

      // Поиск буквы в слове
      for(i = 0; i &lt; len; i++)
      {
         if(word[i] == letter)
         {
            copy[i] = letter;
            replace = true;
         }
      }

      if(replace == false)
         Tries--;
      else
         replace = false;

      // Условие победы
      if(strcmp(word, copy) == 0)
      {
         system("cls");
         cout &lt;&lt; copy &lt;&lt; endl &lt;&lt; endl;
         cout &lt;&lt; letters &lt;&lt; endl &lt;&lt; endl;
         cout &lt;&lt; "Count of tries: " &lt;&lt; Tries &lt;&lt; endl &lt;&lt; endl;
         cout &lt;&lt; "Congratulation !!!" &lt;&lt; endl;
         CountWords++;
         break;
      }

   } while(Tries != 0);

   delete [] copy;
}

void main()
{
   // Открываем файл на чтение в двоичном режиме
   FILE * f = fopen("words.txt", "rb");

   // Если файл не открылся
   if(f == 0)
   {
      // Ошибка
      perror("Open");
      return;
   }

   srand(time(0));

   char Word[20];
   // Пытаемся загрузить слово
   if(!LoadWord(f, Word))
   {
      // Если неудачно
      cout &lt;&lt; "Error !!!" &lt;&lt; endl;
      fclose(f);
      return;
   }

   char answer;
   // Играем, пока не надоест
   do
   {
      Game(Word);
      // Если попыток не осталось, то выход
      if(Tries == 0)
      {
         cout &lt;&lt; "Count of words: " &lt;&lt; CountWords &lt;&lt; endl;
         cout &lt;&lt; "Bye-bye" &lt;&lt; endl;
         break;
      }
      // Если остались
      cout &lt;&lt; "Continue ??? (Y/N)\t";
		
      cin &gt;&gt; answer;
      // Еще играем?
      if(answer == 'Y' || answer == 'y')
         if(!LoadWord(f, Word))
         {
            cout &lt;&lt; "Error !!!" &lt;&lt; endl;
            fclose(f);
            return;
         }

   }while(answer == 'Y' || answer == 'y');
	

   // получаем дескриптор
   int hFile = _fileno(f);
	
   // Разблокировка файла
   int size = _filelength(hFile);
   fseek(f, 0, 0);
   _locking(hFile, _LK_UNLCK, size);
   fclose(f);
}
</example>
</lesson>