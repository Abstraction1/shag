<?xml version="1.0" encoding="windows-1251" ?>
<?xml:stylesheet type="text/xsl" href="common/layout.xsl" ?>

<lesson title="”рок є31" next="section07.xml" prev="section05.xml" summ="0">
<h2>ћножественное наследование.</h2>

<p>
¬ C++ производный класс может быть порождЄн из любого числа непосредственных базовых классов. Ќаличие у производного класса более чем одного непосредственного базового класса называетс€ множественным наследованием. —интаксически множественное наследование отличаетс€ от единичного наследовани€ списком баз, состо€щим более чем из одного элемента. Ќапример, так:
</p> 

<example>

class A
{
	// описание класса ј
};

class B
{
	// описание класса B
};

class C : public A, public B
{
	// описание класса C
};

</example>

<h4>Ќесколько особенностей множественного наследовани€.</h4>

<p>
ѕри создании объектов-представителей производного класса, пор€док расположени€ непосредственных базовых классов в списке баз определ€ет очерЄдность вызова конструкторов умолчани€. Ётот пор€док вли€ет и на очерЄдность вызова деструкторов при уничтожении этих объектов.
</p>

<p>
Ѕолее существенным €вл€етс€ ограничение, согласно которому одно и то же им€ класса не может входить более одного раза в список баз при объ€влении производного класса. Ёто означает, что в наборе непосредственных базовых классов, которые участвуют в формировании производного класса не должно встречатьс€ повтор€ющихс€ элементов. 
</p>

<p>
ј, теперь, чтобы долго не задерживатьс€ на теории, давайте расмотрим практический пример, описанный в следующем разделе урока.
</p>




</lesson>