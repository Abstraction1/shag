<?xml version="1.0" encoding="windows-1251" ?>
<?xml:stylesheet type="text/xsl" href="common/layout.xsl" ?>

<lesson title="Урок №31" next="section09.xml" prev="section07.xml" summ="0">
<h2>Обсуждение плюсов и минусов наследования.</h2>

<p>
Итак, сегодня мы с вами рассмотрели несколько способов взаимодействия классов между собой. У этих способов есть свои достоинства и недостатки. Разберем их:
</p>

<p><b>
Наследование определяется статически на этапе компиляции, его проще использовать, поскольку оно напрямую поддерживается языком программирования.
</b></p>
<p>
<b>В случае наследования упрощается также задача модификации существующей реализации. Если потомок замещает лишь некоторые операции, то могут оказаться затронутыми и остальные операции, т.к. возможно они вызывают замещенные.
</b></p>

<p>Но у наследования есть и минусы:</p>

<p><b>Во-первых, нельзя изменить унаследованную реализацию во время выполнения.</b></p>
<p><b>Во-вторых, родительский класс нередко хотя бы частично определяет физическое представление своих подклассов. Реализации родительского и производного классов сильно связаны.
</b></p>

<p>Композиция объектов определяется динамически во время выполнения за счет того, что объекты получают ссылки на другие объекты. Композицию можно применить, если объекты соблюдают интерфейсы друг друга. Во время выполнения программы любой объект можно заменить другим, лишь бы он имел тот же тип.</p>

<p> Более того, поскольку при реализации объекта кодируются прежде всего его интерфейсы, то зависимости от реализации резко снижается. </p>

<p>Ну, а выбор механизма, как всегда зависит от поставленной задачи.</p>
</lesson>