<?xml version="1.0" encoding="windows-1251" ?>
<?xml:stylesheet type="text/xsl" href="common/layout.xsl" ?>

<lesson title="Урок №23" next="section03.xml" prev="section01.xml" summ="1">
<h2>Перегрузка оператора индексирования.</h2>

<p>
Только что мы с вами разобрали особенности перегрузки инкремента и декремента. Теперь поближе познакомимся с еще одним "особенным" оператором - оператором индексирования ([] - квадратные скобки).
</p>

<p>
Итак, вполне логично предположить, что выражение <b>A [ i ]</b>, где <b>A</b> - объект абстрактного типа class, представляется компилятором как <b>A.operator [ ] ( i ).</b> Рассмотрим пример:
</p> 

<example>
# include &lt;iostream&gt;
using namespace std;
class A{ 
	
	// массив из 10 элементов
	// типа int
     	int a[10];

	// размер массива
	int size;

public:
		
 
	// конструктор без параметров
     	A(){
		size=10;
		for (int i = 0; i &lt; 10; i++)
		
		// очевидно, что операция [], использованная здесь, 
		// в конструкторе класса А, является стандартной,
		// так как она выполняется над именем массива типа int.
 
			a [i] = i + 1;

	} 

	// перегрузка оператора 
	// индексирования
	// возврат по ссылке осуществлен
	// для ситуации ОБЪЕКТ[i]=ЗНАЧЕНИЕ
	// на место вызова индексирования
	// вернется сам объект
     	int&amp;operator[](int j){ 
		
		// возврат конкретного объекта
     		return a [j];
	} 
	
	// функция которая возвращает
	// размер массива 
	int Get () const {
		return size;
	}

}; 

void main () {
 
	int i,j;

	// Работа с одним объектом типа А
	A object;

	cout&lt;&lt;"\nOne object:\n";

	for(i=0;i&lt;object.Get();i++){

		// выражение array[i] интерпретируется как
		// object.operator [](j).
		cout&lt;&lt;object[i]&lt;&lt;" ";		
	}	
	
	cout&lt;&lt;"\n\n";

	// Работа с массивом объектов типа А
     	A array [3];

	cout&lt;&lt;"\nArray of objects:\n";
 
	for(i=0;i&lt;3;i++){

		for(j=0;j&lt;object.Get();j++){

			// выражение array[i][j] интерпретируется как
			// (array [i]).operator [](j).
			// Первая из двух операций [] является стандартной, 
			// так как выполняется над именем массива. 
			// При этом неважно, какой тип имеют его элементы. 
			// Вторая операция [] - переопределенная,
			// так как результатом первой операции [] является объект типа А. 

		     	cout &lt;&lt; array [i][j] &lt;&lt; " ";

		}
		cout &lt;&lt;"\n\n";
	} 

} 

___________________________________

Результат работы программы:

One object:
1 2 3 4 5 6 7 8 9 10


Array of objects:
1 2 3 4 5 6 7 8 9 10

1 2 3 4 5 6 7 8 9 10

1 2 3 4 5 6 7 8 9 10

</example>

<tip start="Примечание">
Обратите внимание!!! В данном примере мы не перегружаем двойные квадратные скобки для двумерного массива. Мы просто создаем массив объектов класса, в котором перегружен оператор [].
</tip>




</lesson>
