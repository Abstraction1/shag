<?xml version="1.0" encoding="windows-1251" ?>
<?xml:stylesheet type="text/xsl" href="common/layout.xsl" ?>

<lesson title="Урок №12: Указатели" next="section3.xml" prev="section1.xml" summ="0">	  

<h2>Указатели</h2>
<p><b>Указатель - это переменная, содержащая адрес другой переменной. </b>Указатели очень широко используются в языке C. Это происходит отчасти потому, что иногда они дают единственную возможность выразить нужное действие, а отчасти потому, что они обычно ведут к более компактным и эффективным программам, чем те, которые могут быть получены другими способами.</p>

<p>Так как указатель содержит адрес объекта, это дает возможность "косвенного" доступа к этому объекту через указатель. Предположим, что <b>х</b> - <b><i>переменная</i></b>, например, типа <b>int</b>, а <b>рх</b> - <b><i>указатель</i></b>, созданный неким еще не указанным способом. Унарная операция <b>&amp;</b> выдает адрес объекта, так что оператор
<example>pxх = &amp;x;
</example>
присваивает адрес <b>x</b> переменной <b>px;</b> говорят, что <b>px</b> "указывает" на <b>x</b>. Операция <b>&amp;</b> применима только к переменным и элементам массива, конструкции вида:<example> &amp;(х-1) и &amp;3</example> являются незаконными. Нельзя также получить адрес регистровой переменной.</p>
<p>Унарная операция <b>*</b> рассматривает свой операнд как адрес конечной цели и обращается по этому адресу, чтобы извлечь содержимое. Следовательно, если <b>y</b> тоже имеет тип <b>int</b>, то
<example>y = *px;
</example>присваивает <b>y</b> содержимое того, на что указывает <b>px</b>. Так последовательность
<example>
px = &amp;x;
y = *px;
</example>присваивает <b>y</b> то же самое значение, что и оператор<example>y = x;
</example></p>
<p>переменные, участвующие во всем этом необходимо описать:
<example>
int x, y;
int *px;
</example>C описанием для <b>x</b> и <b>y</b> мы уже неодонократно встречались. Описание указателя
<example>int *px;
</example>
является новым и должно рассматриваться как мнемоническое; оно говорит, что комбинация <b>*px</b> имеет тип <b>int</b>. Это означает, что если <b>px</b> появляется в контексте <b>*px</b>, то это эквивалентно переменной типа <b>int</b>. Фактически синтаксис описания переменной имитирует синтаксис выражений, в которых эта переменная может появляться. Это замечание полезно во всех случаях, связанных со сложными описаниями.Например,
<example>double  atof(), *dp;
</example>
говорит, что <b>atof()</b> и <b>*dp</b> имеют в выражениях значения типа <b>double</b>.Вы должны также заметить, что из этого описания следует, что указатель может указывать только на определенный вид объектов. 
</p>
<p>Указатели могут входить в выражения. Например, если <b>px</b> указывает на целое <b>x</b>, то <b>*px</b> может появляться в любом контексте, где может встретиться <b>x</b>. Например
<example>y = *px + 1;//присваивает <b>y</b> значение, на 1 большее значения <b>x</b>;
cout&lt;&lt; *px;//выводит текущее значение <b>x</b>;
d = sqrt((double) *px)//получает в <b>d</b> квадратный корень из <b>x</b>,
 причем до передачи функции <b>sqrt</b> значение <b>x</b> преобразуется к типу <b>double</b>.
</example></p>

<p>В выражениях вида
<example>y = *px + 1;
</example>унарные операции <b>*</b> и <b>&amp;</b> связаны со своим операндом более крепко, чем арифметические операции, так что такое выражение берет то значение, на которое указывает <b>рх</b>, прибавляет 1 и присваивает результат переменной <b>y</b>.Мы вскоре вернемся к тому, что может означать выражение
<example>y = *(px + 1);</example>
</p>
<p>Ссылки на указатели могут появляться и в левой части присваиваний. Если <b>px</b> указывает на <b>x</b>, то
<example>*px = 0;
</example>полагает <b>х</b> равным нулю, а
<example>*px += 1;
</example>увеличивает его на единицу, как и выражение
<example>(*px) + 1;
</example>Круглые скобки в последнем примере необходимы; если их опустить, то поскольку унарные операции, подобные <b>*</b> и <b>++</b>, выполняются справа налево, это выражение увеличит <b>px</b>, а не ту переменную, на которую он указывает. 
</p>
<p>И наконец, так как указатели являются переменными, то с ними можно обращаться, как и с остальными переменными. Если <b>py</b> - другой указатель на переменную типа <b>int</b>, то
<example>py = px;
</example>
копирует содержимое <b>рх</b> в <b>py</b>, в результате чего <b>py</b> указывает на то же, что и <b>px</b>.</p>
</lesson>
