<?xml version="1.0" encoding="windows-1251" ?>
<?xml:stylesheet type="text/xsl" href="common/layout.xsl" ?>

<lesson title="Урок №12" next="hometask.xml" prev="section3.xml" summ="1">
<h2>Указатели - аргументы функций. Передача аргументов по указателю.</h2>
<p> Так как в C передача аргументов функциям осуществляется "по значению", вызванная процедура не имеет непосредственной возможности изменить переменную из вызывающей программы. Что же делать, если вам действительно надо изменить аргумент? Например, программа сортировки захотела бы поменять два нарушающих порядок элемента с помощью функции с именем <b>swap</b>. Для этого недостаточно написать
<example>swap(a, b);</example>определив функцию swap при этом следующим образом:
<example>

  void swap(x, y)
  {
         int temp;
 
         temp = x;
         x = y;
         y = temp;
  }

</example>Из-за вызова по значению <b>swap</b> не может воздействовать на аргументы <b>а</b> и <b>b</b> в вызывающей функции.  
</p>
<p>К счастью, все же имеется возможность получить желаемый эффект. Вызывающая программа передает указатели подлежащих изменению значений:
<example>swap(&amp;a, &amp;b);
</example>Так как операция <b>&amp;</b> выдает адрес переменной, то <b>&amp;a</b> является указателем на <b>a</b>. В самой <b>swap</b> аргументы описываются как указатели и доступ к фактическим операндам осуществляется через них
<example>

  void swap(px, py)
  {
         int tmp;
 
         temp = *px;
         *px = *py;
         *py = temp;
  }
</example>
</p>
								 

</lesson>
