<?xml version="1.0" encoding="windows-1251" ?>
<?xml:stylesheet type="text/xsl" href="common/layout.xsl" ?>

<lesson title="Урок №34" next="section04.xml" prev="section01.xml" summ="1">
<h2>Стандартная библиотека шаблонов (STL) и её основные понятия (контейнер, итератор, алгоритм, функтор, предикат, аллокатор).</h2>

<p>
На сегодняшний день, почти все компиляторы языка C++ содержат специальную встроенную библиотеку STL. Данная библиотека содержит набор классов и функций, которые представляют собой реализацию часто используемых алгоритмов. А поскольку, библиотека предназначена для работы с различными типами данных, все классы и функции в ней являются шаблонными. Детальным рассмотрением этого замечательного средства мы и займемся в ближайшее время.
</p>

<p>
Для того чтобы разобраться с библиотекой STL, нам необходимо познакомиться с основными понятиями, на которых она базируется. Итак. Приступим. 
</p>

<p>
Наша библиотека включает в себя четыре компонента, составляющие её внутреннюю структуру:
</p>

<ol>
<li><b>
Контейнер</b> - блок для хранения данных, управления ими и размещения. Иными словами, это объект, предназначенный для хранения и использования других элементов. 
</li>
<li><b>
Алгоритм</b> - специальная функция для работы с данными, содержащимися в контейнере. 
</li>
<li><b>
Итератор</b> - специальный указатель, который позволяет алгоритмам перемещаться по данным конкретного контейнера. 
</li><li><b>
Функторы</b> - механизм для инкапсуляции функций в конкретном объекте для использования его другими компонентами. 
</li>
</ol>

<p>
Кроме вышеописанных конструкций, в STL поддерживаются еще некоторые встроенные компоненты:
</p>

<ol>
<li>
<b>Аллокатор</b> - распределитель памяти. Такой распределитель памяти имеется у каждого конкретного контейнера. Данная конструкция просто-напросто управляет процессом выделения памяти для контейнера. Следует отметить, что по умолчанию распределителем памяти является объект класса allocator. Однако, можно определить свой собственный распределитель.
</li>
<li>
<b>Предикат</b> - функция нестандартного типа, используемая в контейнере. Предикат бывает унарный и бинарный. Может возвращать логическое значение (истину либо ложь).
</li>
</ol>

<p>
В данной части урока мы рассмотрели лишь основные определения, касаемые STL. Далее, мы будем анализировать каждый из этих механизмов отдельно.
</p>
 





</lesson>
