<?xml version="1.0" encoding="windows-1251" ?>
<?xml:stylesheet type="text/xsl" href="common/layout.xsl" ?>

<lesson title="Урок №27" next="index.xml" prev="section07.xml" summ="0">
<h2>Домашнее задание</h2>

<ol>
<li>
Добавить в класс "Односвязный список" следующие функции: вставка элемента в заданную позицию, удаление элемента по заданной позиции, поиск заданного элемента (функция возвращает позицию найденного элемента в случае успеха или NULL в случае неудачи).
</li>
<li>
Реализовать шаблонный класс "Очередь" на основе двусвязного списка.
</li>
<li>
Создать шаблонный класс-контейнер Array, который представляет собой массив, позволяющий хранить объекты заданного типа. Класс должен реализовывать следующие функции: 
</li>
</ol>
<hr/>
<ol type="A">
<li>
<b>GetSize</b> - получение размера массива (количество элементов, под которые выделена память)
</li>
<li>
<b>SetSize(int size, int grow = 1)</b> - установка размера массива (если параметр size больше предыдущего размера массива, то выделяется дополнительный блок памяти, если нет, то "лишние" элементы теряются и память освобождается); параметр grow определяет для какого количества элементов необходимо выделить память, если количество элементов превосходит текущий размер массива. Например, SetSize(5, 5); означает, что при добавлении 6-го элемента размер массива становится равным 10, при добавлении 11-го  -  15 и т. д.
</li>
<li>
<b>GetUpperBound</b> - получение последнего допустимого индекса в массиве. Например, если при размере массива 10, вы добавляете в него 4 элемента, то функция вернет 3.
</li>
<li>
<b>IsEmpty</b> - массив пуст?
</li>
<li>
<b>FreeExtra</b> - удалить "лишнюю" память (выше последнего допустимого индекса)
</li>
<li>
<b>RemoveAll</b> - удалить все
</li>
<li>
<b>GetAt</b> -получение определенного элемента (по индексу)
</li>
<li>
<b>SetAt</b> - установка нового значения для определенного элемента (индекс элемента должен быть меньше текущего размера массива)
</li>
<li>
<b>operator []</b> - для реализации двух предыдущих функций
</li>
<li>
<b>Add</b> - добавление элемента в массив (при необходимости массив увеличивается на значение grow функции SetSize)
</li>
<li>
<b>Append</b> - "сложение" двух массивов
</li>
<li>
<b>operator =</b>
</li>
<li>
<b>GetData</b> - получения адреса массива с данными
</li>
<li>
<b>InsertAt</b> - вставка элемента(-ов) в заданную позицию
</li>
<li>
<b>RemoveAt</b> - удаление элемента(-ов) с заданной позиции
</li>
</ol>


</lesson>