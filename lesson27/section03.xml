<?xml version="1.0" encoding="windows-1251" ?>
<?xml:stylesheet type="text/xsl" href="common/layout.xsl" ?>

<lesson title="Урок №27" next="section04.xml" prev="section02.xml" summ="0">
<h2>Двусвязный список.</h2>
<p>
Вы уже знаете, что есть односвязный список и, поэтому вам будет просто понять принцип работы двусвязного списка. Отличие данной структуры от предыдущей состоит в том, что в двусвязном (или двунаправленном списке) узел состоит не из двух, а из трех частей. В третьем компоненте хранится указатель на предыдущий элемент.</p>
<example>  

    //узел (звено) списка	
    struct node
    {
	//Информационный элемент звена списка 
	int value;
	
	// Указатель на предыдущее звено списка 
      	node *prev; 

 	// Указатель на следующее звено списка 
      	node *next; 	
    };
</example>
<p>Такое построение позволяет производить движение по списку, как в прямом, так и в обратном направлении.
</p>

<p>
Рассмотрим на иллюстрациях основные действия над двусвязным списком.
</p>

<h5>Формирование двусвязного списка.</h5>

<ol>
<li>Отведем место для указателей в статической памяти и зарезервируем место для динамического объекта.<center><img src="images\10.jpg" ></img></center></li>
<li>Присвоим значение переменной ptail, и поместим в информационное поле значение элемента.<center><img src="images\11.jpg" ></img></center></li>
<li>Присвоим указателю на предыдущий элемент значение NULL (т. к. элемент первый - предыдущего нет).<center><img src="images\12.jpg" ></img></center></li>
<li>Поместим в поле звена адрес еще одного - нового динамического объекта.<center><img src="images\13.jpg" ></img></center></li>
<li>В новый добавленный объект записываем значение, в указатель на следующее звено записываем NULL, т. к. объект добавляется в конец.<center><img src="images\14.jpg" ></img></center></li>
<li>В указатель на предыдущий элемент записываем адрес предыдущего объекта.<center><img src="images\15.jpg" ></img></center></li>
<li>Переменная ptail должна содержать адрес последнего добавленного элемента, т. к. он добавлен в конец.<center><img src="images\16.jpg" ></img></center></li>
</ol>

<p>Двусвязный список из двух элементов готов.</p>

<h5>Вставка элемента в двусвязный список.</h5>

<ol>
<li>Выделить память под новый узел.</li> 
<li>Записать в новый узел значение.</li>
<li>В указатель на предыдущий узел записать адрес узла, который должен располагаться перед 
новым узлом.</li>
<li>Записать в указатель на следующий узел адрес узла, который должен быть 
расположен после нового узла.</li>
<li>В предыдущем узле заменяем значение указателя на следующий узел на адрес нового узла.</li>
<li>В следующем узле заменяем значение указателя на предыдущий узел на адрес нового узла.</li>
</ol>
<center><img src="images\17.jpg" ></img></center>
<h5>Удаление элемента из двусвязного списка.</h5>

<ol>
<li>Записать адрес узла, следующего за удаляемым узлом, в указатель на следующий узел узла, 
являющегося предыдущим для удаляемого узла.</li>
<li>Записать адрес узла, являющегося предыдущим для удаляемого, в указатель на предыдущий узел 
узла, следующего за удаляемым узлом.</li>
<li>Удалить узел, предназначенный для удаления.</li>
</ol>
<center><img src="images\18.jpg" ></img></center>
<hr/>
<p>Вот и всё - а теперь переходим к следующему разделу урока и рассматриваем пример.</p>
</lesson>